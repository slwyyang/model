<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from diff_wheeled_robot.xacro       | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="differential_wheeled_robot"
	xmlns:xacro="http://www.ros.org/wiki/xacro">
	<!-- Wheels -->
	<!-- in kg-->
	<!-- Defining the colors used in this robot -->
	<material name="Black">
		<color rgba="0.0 0.0 0.0 1.0"/>
	</material>
	<material name="Red">
		<color rgba="0.8 0.0 0.0 1.0"/>
	</material>
	<material name="White">
		<color rgba="1.0 1.0 1.0 1.0"/>
	</material>
	<material name="Blue">
		<color rgba="0.0 0.0 0.8 1.0"/>
	</material>
	<!-- PROPERTY LIST -->
	<!--All units in m-kg-s-radians unit system -->
	<!-- Main body radius and height -->
	<!-- Main Body Cylinder base   -->
	<!-- in kg-->
	<!-- caster wheel radius and height -->
	<!-- caster wheel mass -->
	<!-- in kg-->
	<!-- caster wheel radius and height -->
	<!-- caster wheel mass -->
	<!-- in kg-->
	<!-- Wheels -->
   --&gt; 
  	<!-- in kg-->
	<!-- Hokuyo Laser scanner -->
	<!-- Macro for calculating inertia of cylinder -->
	<!-- BASE-FOOTPRINT -->
	<!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="5"/>
      <origin xyz="0 0 0"/>
      <!--The 3x3 rotational inertia matrix. -->
      <inertia ixx="0.0282916666667" ixy="0" ixz="0" iyy="0.0282916666667" iyz="0" izz="0.05625"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.15"/>
      </geometry>
      <material name="White"/>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.15"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
	<!--fb : front, back ; lr: left, right -->
	<link name="front_right_wheel">
		<visual>
			<origin rpy="1.57079632679 0  0 " xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.02" radius="0.04"/>
			</geometry>
			<material name="DarkGray"/>
		</visual>
		<collision>
			<origin rpy="1.57079632679 0 0 " xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.02" radius="0.04"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="2.5"/>
			<origin xyz="0 0 0"/>
			<inertia ixx="0.00108333333333" ixy="0" ixz="0" iyy="0.00108333333333" iyz="0" izz="0.002"/>
		</inertial>
	</link>
	<gazebo reference="front_right_wheel">
		<mu1 value="1.0"/>
		<mu2 value="1.0"/>
		<kp value="10000000.0"/>
		<kd value="1.0"/>
		<fdir1 value="1 0 0"/>
		<material>Gazebo/Grey</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	<joint name="front_right_wheel_joint" type="continuous">
		<parent link="base_link"/>
		<child link="front_right_wheel"/>
		<origin rpy="0 0 0" xyz="0.0 0.15 0.0"/>
		<axis rpy="0  0" xyz="0 1 0"/>
		<limit effort="100" velocity="100"/>
		<joint_properties damping="0.0" friction="0.0"/>
	</joint>
	<!-- Transmission is important to link the joints and the controller -->
	<transmission name="front_right_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="front_right_wheel_joint"/>
		<actuator name="front_right_wheel_joint_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>
	<!--fb : front, back ; lr: left, right -->
	<link name="front_left_wheel">
		<visual>
			<origin rpy="1.57079632679 0  0 " xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.02" radius="0.04"/>
			</geometry>
			<material name="DarkGray"/>
		</visual>
		<collision>
			<origin rpy="1.57079632679 0 0 " xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.02" radius="0.04"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="2.5"/>
			<origin xyz="0 0 0"/>
			<inertia ixx="0.00108333333333" ixy="0" ixz="0" iyy="0.00108333333333" iyz="0" izz="0.002"/>
		</inertial>
	</link>
	<gazebo reference="front_left_wheel">
		<mu1 value="1.0"/>
		<mu2 value="1.0"/>
		<kp value="10000000.0"/>
		<kd value="1.0"/>
		<fdir1 value="1 0 0"/>
		<material>Gazebo/Grey</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	<joint name="front_left_wheel_joint" type="continuous">
		<parent link="base_link"/>
		<child link="front_left_wheel"/>
		<origin rpy="0 0 0" xyz="0.0 -0.15 0.0"/>
		<axis rpy="0  0" xyz="0 1 0"/>
		<limit effort="100" velocity="100"/>
		<joint_properties damping="0.0" friction="0.0"/>
	</joint>
	<!-- Transmission is important to link the joints and the controller -->
	<transmission name="front_left_wheel_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="front_left_wheel_joint"/>
		<actuator name="front_left_wheel_joint_motor">
			<hardwareInterface>EffortJointInterface</hardwareInterface>
			<mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>
	<!--Caster front  -->
	<link name="caster_front_link">
		<visual>
			<origin rpy="1.57079632679 0 0" xyz="0 0.02 0"/>
			<geometry>
				<sphere radius="0.026"/>
			</geometry>
			<material name="Black"/>
		</visual>
		<collision>
			<geometry>
				<sphere radius="0.026"/>
			</geometry>
			<origin rpy="1.57079632679 0 0" xyz="0 0.02 0"/>
		</collision>
		<inertial>
			<mass value="0.5"/>
			<origin xyz="0 0 0"/>
			<inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
		</inertial>
	</link>
	<joint name="caster_front_joint" type="fixed">
		<parent link="base_link"/>
		<child link="caster_front_link"/>
		<origin rpy="-1.57079632679 0 0" xyz="0.115 0.0 0.008"/>
	</joint>
	<gazebo reference="caster_front_link">
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	<!--Caster back  -->
	<link name="caster_back_link">
		<visual>
			<origin rpy="1.57079632679 0 0" xyz="0.02 0.02 0 "/>
			<geometry>
				<sphere radius="0.028"/>
			</geometry>
			<material name="Black"/>
		</visual>
		<collision>
			<geometry>
				<sphere radius="0.028"/>
			</geometry>
			<origin rpy="1.57079632679 0 0" xyz="0 0.02 0 "/>
		</collision>
		<inertial>
			<mass value="0.5"/>
			<origin xyz="0 0 0"/>
			<inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
		</inertial>
	</link>
	<joint name="caster_back_joint" type="fixed">
		<parent link="base_link"/>
		<child link="caster_back_link"/>
		<origin rpy="-1.57079632679 0 0" xyz="-0.135 0.0 0.008"/>
	</joint>
	<gazebo reference="caster_back_link">
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	
	<!-- SENSORS -->
	<!-- imu sensor -->
	<link name="imu_link">
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.05 0.05 0.0325"/>
			</geometry>
			<material name="Blue"/>
		</visual>
	</link>
	<joint name="imu_joint" type="fixed">
		<origin rpy="0.0 0 0" xyz="0.0 0.0 0.1"/>
		<parent link="base_link"/>
		<child link="imu_link"/>
	</joint>
	<gazebo reference="imu_link">
		<gravity>true</gravity>
		<sensor name="imu_sensor" type="imu">
			<always_on>true</always_on>
			<update_rate>100</update_rate>
			<visualize>true</visualize>
			<topic>imu</topic>
			<plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
				<topicName>imu</topicName>
				<bodyName>imu_link</bodyName>
				<updateRateHZ>10.0</updateRateHZ>
				<gaussianNoise>0.0</gaussianNoise>
				<xyzOffset>0 0 0</xyzOffset>
				<rpyOffset>0 0 0</rpyOffset>
				<frameName>imu_link</frameName>
				<initialOrientationAsReference>false</initialOrientationAsReference>
			</plugin>
			<pose>0 0 0 0 0 0</pose>
		</sensor>
	</gazebo>
	<!-- depth camera -->
	<link name="camera_front_link">
		<visual>
			<origin xyz="0 0 0" rpy="1.57 0 1.57"/>
			<geometry>
				<!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
				<mesh filename="package://autonomus_transport_industrial_system/urdf/meshes/d435.dae" />
				<!--<mesh filename="package://realsense2_description/meshes/d435/d435.dae" />-->

			</geometry>
			<material name="Blue"/>
		</visual>
	</link>
	<joint name="camera_front_joint" type="fixed">
		<origin rpy="0.0 0.15 0" xyz="0.06 0.0 0.15"/>
		<parent link="base_link"/>
		<child link="camera_front_link"/>
	</joint>
	<gazebo reference="camera_front_link">
		<sensor name="camera_link_front" type="depth">
			<update_rate>20</update_rate>
			<camera>
				<horizontal_fov>1.047198</horizontal_fov>
				<image>
					<width>640</width>
					<height>480</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
			</camera>
			<plugin name="camera_link_controller" filename="libgazebo_ros_openni_kinect.so">
				<baseline>0.2</baseline>
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>

				<cameraName>kinect_alpha</cameraName>
				<imageTopicName>rgb/image_raw </imageTopicName>
				<cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
				<depthImageTopicName>depth/image_raw</depthImageTopicName>
				<depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
				<pointCloudTopicName>depth/points</pointCloudTopicName>
				<frameName>camera_front</frameName>
				<pointCloudCutoff>0.5</pointCloudCutoff>
				<pointCloudCutoffMax>3.0</pointCloudCutoffMax>
				<distortionK1>0.00000001</distortionK1>
				<distortionK2>0.00000001</distortionK2>
				<distortionK3>0.00000001</distortionK3>
				<distortionT1>0.00000001</distortionT1>
				<distortionT2>0.00000001</distortionT2>
				<CxPrime>0</CxPrime>
				<Cx>0</Cx>
				<Cy>0</Cy>
				<focalLength>0</focalLength>
				<hackBaseline>0</hackBaseline>
			</plugin>
		</sensor>
	</gazebo>
	<!-- hokuyo -->
	<joint name="hokuyo_joint" type="fixed">
		<axis xyz="0 1 0" />
		<origin xyz="0.06 0 0.08" rpy="0 0 -3.14"/>
		<parent link="base_link"/>
		<child link="hokuyo_link"/>
	</joint>

	<link name="hokuyo_link">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size=".05 .05 .05"/>
			</geometry>
		</collision>

		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<mesh filename="package://autonomus_transport_industrial_system/urdf/meshes/hokuyo.dae"/>
			</geometry>
		</visual>

		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>
	<!-- hokuyo laser sensor-->
	<gazebo reference="hokuyo_link">
		<sensor type="gpu_ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>20</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1</resolution>
						<min_angle>-3.1415926</min_angle>
						<max_angle>3.1415926</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.01</min>
					<max>10.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
				<topicName>/my_robot/laser/scan</topicName>
				<frameName>hokuyo_link</frameName>
			</plugin>
		</sensor>
	</gazebo>
	<!-- Differential drive controller  -->
	<gazebo>
		<plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller_front">
			<rosDebugLevel>Debug</rosDebugLevel>
			<publishWheelTF>True</publishWheelTF>
			<publishOdomTF>false</publishOdomTF>
			<publishTf>1</publishTf>
			<publishWheelJointState>true</publishWheelJointState>
			<alwaysOn>true</alwaysOn>
			<updateRate>100.0</updateRate>
			<leftJoint>front_right_wheel_joint</leftJoint>
			<rightJoint>front_left_wheel_joint</rightJoint>
			<wheelSeparation>0.3</wheelSeparation>
			<wheelDiameter>0.08</wheelDiameter>
			<broadcastTF>1</broadcastTF>
			<wheelTorque>30</wheelTorque>
			<wheelAcceleration>1.8</wheelAcceleration>
			<commandTopic>cmd_vel</commandTopic>
			<odometryFrame>odom</odometryFrame>
			<odometryTopic>odom</odometryTopic>
			<robotBaseFrame>base_link</robotBaseFrame>
		</plugin>
	</gazebo>
	<!--
	  <gazebo>
	    <plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so">
	      <publish_tf>1</publish_tf>
	      <left_wheel_joint_name>front_left_wheel_joint</left_wheel_joint_name>
	      <right_wheel_joint_name>front_right_wheel_joint</right_wheel_joint_name>
	      <wheel_separation>.30</wheel_separation>
	      <wheel_diameter>0.08</wheel_diameter>
	      <torque>30.0</torque>
	      <velocity_command_timeout>0.6</velocity_command_timeout>
	    </plugin>
	  </gazebo>
-->
	<!--
<gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="joint_state_publisher">
      <jointName>front_right_wheel_joint, front_left_wheel_joint</jointName>
      <updateRate>10.0</updateRate>
      <alwaysOn>true</alwaysOn>
    </plugin>
</gazebo>
-->
</robot>
